
import { GoogleGenAI, Modality, GenerateContentResponse } from "@google/genai";
import type { ModelImage, ClothingItem, AccessoryItem } from '../types';

const getAi = () => {
  if (!process.env.API_KEY) {
    throw new Error("API_KEY environment variable not set");
  }
  return new GoogleGenAI({ apiKey: process.env.API_KEY });
};

export const generateClothedModel = async (
  model: ModelImage,
  items: {
    top?: ClothingItem;
    bottom?: ClothingItem;
    dress?: ClothingItem;
  }
): Promise<string> => {
  const ai = getAi();
  const parts: any[] = [{ inlineData: { data: model.base64, mimeType: model.mimeType } }];
  let promptText = '';

  if (items.dress) {
    parts.push({ inlineData: { data: items.dress.base64, mimeType: items.dress.mimeType } });
    promptText = `Your task is a virtual try-on. Start with the person in the first image. You must **completely remove their original clothing** and replace it with the full-body outfit from the second image. It is crucial that you preserve the exact appearance, texture, color, and design of the new outfit. Do not alter the new clothing in any way. Maintain the person's original pose, body, face, and the background from the first image. The final output should be a single, photorealistic image of the person wearing ONLY the new outfit.
IMPORTANT: Ensure the final image shows the full person and that their head and face are completely visible, not cropped or cut off in any way.`;
  } else if (items.top && items.bottom) {
    parts.push({ inlineData: { data: items.top.base64, mimeType: items.top.mimeType } });
    parts.push({ inlineData: { data: items.bottom.base64, mimeType: items.bottom.mimeType } });
    promptText = `Your task is a virtual try-on. Start with the person in the first image. You must **completely remove their original top and bottom clothing** and replace them with the new items provided.
1. Dress the person in the top from the second image.
2. Dress the person in the bottom from the third image.
It is crucial that you preserve the exact appearance, texture, color, and design of both the new top and bottom clothing items. Do not alter the new clothing in any way. Maintain the person's original pose, body, face, and the background from the first image. The final output should be a single, photorealistic image of the person wearing ONLY the new clothes.
IMPORTANT: Ensure the final image shows the full person and that their head and face are completely visible, not cropped or cut off in any way.`;
  } else {
    throw new Error("Invalid clothing combination provided.");
  }

  parts.push({ text: promptText });

  try {
    const response: GenerateContentResponse = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image-preview',
      contents: { parts },
      config: {
        responseModalities: [Modality.IMAGE, Modality.TEXT],
      },
    });

    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData) {
        return part.inlineData.data;
      }
    }
    throw new Error("No image was generated by the AI model.");
  } catch (error) {
    console.error("Error generating clothed model with Gemini API:", error);
    throw new Error("Failed to generate outfit. The model may have refused the request due to safety policies or other issues.");
  }
};

export const addAccessories = async (baseImage: ModelImage, accessories: AccessoryItem[]): Promise<string> => {
    const ai = getAi();
    const parts: any[] = [{ inlineData: { data: baseImage.base64, mimeType: baseImage.mimeType } }];
    accessories.forEach(acc => {
        parts.push({ inlineData: { data: acc.base64, mimeType: acc.mimeType } });
    });

    const accessoryNames = accessories.map(a => a.name).join(', ');
    
    parts.push({
        text: `Your task is to add accessories to the person in the first image. **Do not alter the person or their existing clothing.** You must add the accessories from the subsequent images (${accessoryNames}) to the person in a photorealistic way. Place each accessory in its natural location (e.g., shoes on feet, sunglasses on face). Maintain the original image's quality, pose, and background. The final output should be a single, photorealistic image of the person wearing their original outfit plus all the new accessories.`
    });

    try {
        const response: GenerateContentResponse = await ai.models.generateContent({
            model: 'gemini-2.5-flash-image-preview',
            contents: { parts },
            config: {
                responseModalities: [Modality.IMAGE, Modality.TEXT],
            },
        });
        
        for (const part of response.candidates[0].content.parts) {
            if (part.inlineData) {
                return part.inlineData.data;
            }
        }
        throw new Error("No image was generated by the AI model for accessories.");
    } catch (error) {
        console.error("Error adding accessories with Gemini API:", error);
        throw new Error("Failed to add accessories. The model may have refused the request due to safety policies or other issues.");
    }
};
